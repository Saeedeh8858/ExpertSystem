# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nw1lzPGwTpDSmY4cBSf_5y5Fd1YV2PCa
"""



!pip install experta
!pip install frozendict==2.3.4

from random import choice
from experta import Fact, KnowledgeEngine, Rule

class Finances(Fact):

    pass

class AdviserMachin(KnowledgeEngine):
    @Rule(Finances(savingsAdequate=False))
    def saveAdvise(self):
        print("The machin advise is to Invest in Savings")

    @Rule(Finances(savingsAdequate=True, incomeAdequate=True))
    def stockAdvise(self):
        print("The machin advise is to Invest in Stocks")

    @Rule(Finances(savingsAdequate=True, incomeAdequate=False))
    def mixtureAdvice(self):
        print("The machin advise is to Invest in both saving and stock")

# User inputs
NoOfDependents = int(input('How many dependents do you have: '))  # Z
AmountSaved = 15000
Income = 15000
IncomeSteady = input('Do you have a steady income? (yes/no): ').strip().lower() == 'yes'

# Calculate thresholds
T_Savings = NoOfDependents * 3000  # Y=Z*3000
T_Income = 9000 + 2500 * NoOfDependents  # W=9000+2500*Z

print("\nFinancial Information:")
print("Total of Dependents:", NoOfDependents)
print("your Saving is:", AmountSaved)
print("your Income is:", Income)
print("The Condition of your Steady is:", IncomeSteady)
print("Threshold of your Savings is almost:", T_Savings)
print("Threshold of your Income is almost:", T_Income)

# Financial status
savingsCondition = AmountSaved >= T_Savings
incomeCondition = IncomeSteady and Income > T_Income

print("\nAdequacy Evaluation:")
print("Your Savings are:", savingsCondition)
print("your Income is:", incomeCondition)

# Run the expert system
Robot = AdviserMachin()
Robot.reset()
Robot.declare(Finances(savingsAdequate=savingsCondition, incomeAdequate=incomeCondition))
Robot.run()